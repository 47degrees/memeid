# This file has been automatically generated and should
# not be edited nor added to source control systems.

# To edit the original configurations go to
# https://github.com/alejandrohdezma/sbt-scalafmt-defaults/edit/master/.scalafmt.conf

version = 3.0.6

# Number of maximum characters in a column
maxColumn = 120

# Ensure newlines are added arround top level body definitions always
newlines.topLevelBodyIfMinStatements = [before,after]
newlines.topLevelBodyMinStatements = 1

# Allow line-overflow for comments and lines that would overflow even with a newline.
newlines.avoidForSimpleOverflow=[slc, tooLong]

# Ensure newlines around every statement except `case object` definitions
newlines.topLevelStatementBlankLines = [
  {
    blanks = 1,
    minBreaks = 0,
    regex = "^(?!((Term\\.Apply)|(Defn\\.Object)))"
  }
]

# Ensure lines starting with the margin character `|` are indented differently
assumeStandardLibraryStripMargin = true

# Align everything that can be aligned
align.preset = most
align.multiline = false
align.tokens."+" = [
  {
    code = ":=", owner = "Term.ApplyInfix"
  },
  {
    code = "+=", owner = "Term.ApplyInfix"
  },
  {
    code = "++=", owner = "Term.ApplyInfix"
  },
  {
    code = "--=", owner = "Term.ApplyInfix"
  },
  {
    code = "-=", owner = "Term.ApplyInfix"
  }
]

# Allow literal argument lists with newlines only once `maxColumn` is reached
binPack.literalArgumentLists = true
binPack.literalsIncludeSimpleExpr = true
binPack.literalsExclude = [ "Term.Name" ]

# Use ScalaDoc style and enable wrapping when reaching `maxColumn`
docstrings.style = "SpaceAsterisk"
docstrings.wrap = yes
docstrings.oneline = fold

# Avoid infix calls (except for operators)
rewrite.rules += AvoidInfix

# Ensure redundant braces are removed
rewrite.rules += RedundantBraces
rewrite.redundantBraces.maxLines = 1
rewrite.redundantBraces.stringInterpolation = true

# Ensure redundant parentheses are removed
rewrite.rules += RedundantParens

# Ensure modifiers like `implicit` or `final` are sorted the same
rewrite.rules += SortModifiers

# Replaces parentheses into curly braces in for comprehensions that contain multiple enumerator generators
rewrite.rules += PreferCurlyFors

# Ensure a separate line is created for each selector within a `{...}` import.
rewrite.rules += Imports
rewrite.imports.expand = true

# Avoid ASCII tokens
rewriteTokens = {
  "⇒": "=>"
  "→": "->"
  "←": "<-"
}

# Select followed by curly braces should not start a chain
includeCurlyBraceInSelectChains = false

# Ensure code blocks inside markdown files get formated too
project.includePaths."+" = ["glob:**.md"]
rewrite.neverInfix.excludeFilters."+" = [ "should", "be", "must", "equalTo", "like", "and", "some", "lessThan" ]